name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.sm-version == '1.12.x' }}
    strategy:
      fail-fast: false
      matrix:
        sm-version:   [ '1.11.x' ]
        json-version: [ '1.7.0' ]

    steps:
      - uses: actions/checkout@v3

      - name: Setup SourcePawn
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.sm-version }}

      - name: Checkout Jansson
        uses: actions/checkout@v3
        with:
          repository: rejchev/sm-jansson
          ref: ${{ matrix.json-version }}
          path: jansson
          submodules: recursive

      - name: Setup Working Directory
        run: |
          mkdir -p sourcemod/plugins
          mkdir -p sourcemod/scripting

          cp -r -f src/* sourcemod/scripting/
          
      - name: Setup Sources
        run: cp -r -f jansson/pawn/scripting/include/* src/include/

      - name: Build
        working-directory: src
        run: |
          for file in *.sp;
          do
            filename="${file%.*}"

            echo "Compiling $filename..."
            spcomp $file -O2 -v2 -iinclude -o ../sourcemod/plugins/$filename.smx
          done

      - name: Upload
        uses: actions/upload-artifact@v3
        with: 
          name: storage-${{ matrix.sm-version }}
          path: sourcemod

  release:
    name: Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sm-version: [ '1.11.x' ]

    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Package artifact
        run: |
          version=`echo $GITHUB_REF | sed "s/refs\/tags\///"`
          7z a storage-${version}-${{ matrix.sm-version }}.zip ./storage-${{ matrix.sm-version }}/*
      
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: '*.zip'
          tag: ${{ github.ref }}
          file_glob: true